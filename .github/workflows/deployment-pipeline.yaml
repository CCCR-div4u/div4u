name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      skip_approval:
        description: 'Skip manual approval for testing'
        required: false
        default: false
        type: boolean
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'comparison/**'

env:
  REGISTRY_BASE: harbor.bluesunnywings.com
  TARGET_ENV: ${{ github.event.inputs.environment || (github.ref_name == 'main' && 'production' || 'staging') }}
  REGISTRY: ${{ github.event.inputs.environment == 'production' && 'harbor.bluesunnywings.com/div4u-production' || github.event.inputs.environment == 'staging' && 'harbor.bluesunnywings.com/div4u-staging' || github.ref_name == 'main' && 'harbor.bluesunnywings.com/div4u-production' || 'harbor.bluesunnywings.com/div4u-staging' }}
  IMAGE_TAG: ${{ github.sha }}
  BUILD_NUMBER: ${{ github.run_number }}
  TIMESTAMP: ${{ github.run_id }}

jobs:
  dast-scan:
    name: DAST Scan (Staging Only)
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'staging' || (github.event.inputs.environment == '' && github.ref_name != 'main') }}
    permissions:
      contents: read
      security-events: write
      issues: write  
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for staging environment to be ready
        run: |
          echo "Waiting for staging environment to be ready..."
          echo "Assuming staging environment is already deployed and accessible"
          sleep 30

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://staging.div4u.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: false

      - name: Parse DAST results
        id: parse-dast
        if: always()
        run: |
          if [ -f "report.json" ]; then
            HIGH_RISK=$(jq '[.site[].alerts[] | select(.riskdesc | startswith("High"))] | length' report.json 2>/dev/null || echo 0)
            MEDIUM_RISK=$(jq '[.site[].alerts[] | select(.riskdesc | startswith("Medium"))] | length' report.json 2>/dev/null || echo 0)
            LOW_RISK=$(jq '[.site[].alerts[] | select(.riskdesc | startswith("Low"))] | length' report.json 2>/dev/null || echo 0)
            
            echo "high_risk=$HIGH_RISK" >> $GITHUB_OUTPUT
            echo "medium_risk=$MEDIUM_RISK" >> $GITHUB_OUTPUT
            echo "low_risk=$LOW_RISK" >> $GITHUB_OUTPUT
            
            echo "DAST Scan Results:"
            echo "High Risk: $HIGH_RISK"
            echo "Medium Risk: $MEDIUM_RISK"
            echo "Low Risk: $LOW_RISK"
          else
            echo "No DAST results found"
            echo "high_risk=0" >> $GITHUB_OUTPUT
            echo "medium_risk=0" >> $GITHUB_OUTPUT
            echo "low_risk=0" >> $GITHUB_OUTPUT
          fi

      - name: Send DAST results to Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          channel: '#div4u-ci-alerts'
          custom_payload: |
            {
              "text": "üîç DAST Scan Complete - Staging Environment",
              "attachments": [
                {
                  "color": "${{ steps.parse-dast.outputs.high_risk > 0 && 'danger' || steps.parse-dast.outputs.medium_risk > 0 && 'warning' || 'good' }}",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Environment",
                      "value": "Staging",
                      "short": true
                    },
                    {
                      "title": "Target URL",
                      "value": "https://staging.div4u.com",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                      "short": true
                    },
                    {
                      "title": "üö® High Risk",
                      "value": "${{ steps.parse-dast.outputs.high_risk }}",
                      "short": true
                    },
                    {
                      "title": "‚ö†Ô∏è Medium Risk",
                      "value": "${{ steps.parse-dast.outputs.medium_risk }}",
                      "short": true
                    },
                    {
                      "title": "üìã Low Risk",
                      "value": "${{ steps.parse-dast.outputs.low_risk }}",
                      "short": true
                    },
                    {
                      "title": "üìä DAST Report",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Detailed Results>",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}