# Div4u Comparison Service - Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# 서버 설정 (Server Configuration)
# =============================================================================

# 서버 포트 (Server Port)
# 기본값: 3002 (Core API는 3001 사용)
PORT=3002

# 실행 환경 (Node Environment)
# 가능한 값: development, test, staging, production
NODE_ENV=development

# =============================================================================
# 서울시 API 설정 (Seoul Open API Configuration)
# =============================================================================

# 서울시 Open API 인증 키 (필수)
# 발급처: https://data.seoul.go.kr/
# 실시간 도시데이터 API 사용 승인 필요
SEOUL_API_KEY=your_seoul_api_key_here

# 서울시 API 기본 URL
# 기본값: http://openapi.seoul.go.kr:8088
SEOUL_API_BASE_URL=http://openapi.seoul.go.kr:8088

# =============================================================================
# 캐시 설정 (Cache Configuration)
# =============================================================================

# 캐시 유지 시간 (분 단위)
# 권장값: 개발환경 1분, 프로덕션 5분
# 0으로 설정하면 캐시 비활성화
CACHE_TTL_MINUTES=1

# =============================================================================
# 보안 및 CORS 설정 (Security & CORS Configuration)
# =============================================================================

# CORS 허용 도메인 (쉼표로 구분)
# 개발환경: 로컬 개발 서버 포트들
# 프로덕션: 실제 도메인만 포함
ALLOWED_ORIGINS=http://localhost:5174,http://localhost:3000

# =============================================================================
# 로깅 설정 (Logging Configuration)
# =============================================================================

# 로그 출력 레벨
# 가능한 값: error, warn, info, debug
# 개발환경: debug, 프로덕션: warn 권장
LOG_LEVEL=info

# =============================================================================
# 환경별 설정 예시 (Environment-specific Examples)
# =============================================================================

# 개발 환경 (Development)
# NODE_ENV=development
# LOG_LEVEL=debug
# CACHE_TTL_MINUTES=1
# ALLOWED_ORIGINS=http://localhost:5174,http://localhost:3000

# 테스트 환경 (Test)
# NODE_ENV=test
# LOG_LEVEL=error
# CACHE_TTL_MINUTES=0
# SEOUL_API_KEY=test_api_key

# 프로덕션 환경 (Production)
# NODE_ENV=production
# LOG_LEVEL=warn
# CACHE_TTL_MINUTES=5
# ALLOWED_ORIGINS=https://yourdomain.com

# =============================================================================
# 추가 설정 (Additional Configuration)
# =============================================================================

# 향후 확장을 위한 설정들 (Future Extensions)

# Redis 캐시 (향후 지원 예정)
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=your_redis_password

# 데이터베이스 (향후 지원 예정)
# DATABASE_URL=postgresql://user:password@localhost:5432/comparison_db

# 모니터링 (향후 지원 예정)
# SENTRY_DSN=https://your-sentry-dsn
# NEW_RELIC_LICENSE_KEY=your_newrelic_key

# =============================================================================
# 설정 가이드 (Configuration Guide)
# =============================================================================

# 1. 필수 설정
#    - SEOUL_API_KEY: 서울시 API 키 발급 필수
#
# 2. 개발 환경 설정
#    - LOG_LEVEL=debug: 상세 로그 출력
#    - CACHE_TTL_MINUTES=1: 빠른 데이터 업데이트
#
# 3. 프로덕션 환경 설정
#    - NODE_ENV=production: 성능 최적화
#    - LOG_LEVEL=warn: 필요한 로그만 출력
#    - ALLOWED_ORIGINS: 실제 도메인만 허용
#
# 4. 보안 주의사항
#    - .env 파일을 Git에 커밋하지 마세요
#    - API 키를 코드에 하드코딩하지 마세요
#    - 프로덕션에서는 환경변수로 직접 설정하세요

# =============================================================================
# 문제 해결 (Troubleshooting)
# =============================================================================

# 포트 충돌 시: PORT=3003
# CORS 오류 시: ALLOWED_ORIGINS에 도메인 추가
# 캐시 문제 시: CACHE_TTL_MINUTES=0 (임시)
# API 연결 실패 시: SEOUL_API_KEY 확인

# 자세한 내용은 docs/environment-variables.md 참조